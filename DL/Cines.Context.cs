//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class JCervantesCinesEntities : DbContext
    {
        public JCervantesCinesEntities()
            : base("name=JCervantesCinesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cine> Cines { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }
        public virtual DbSet<Zona> Zonas { get; set; }
    
        public virtual int CineAdd(string nombre, string direccion, Nullable<int> idZona, Nullable<double> ventas, Nullable<double> latitud, Nullable<double> longitud)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var idZonaParameter = idZona.HasValue ?
                new ObjectParameter("IdZona", idZona) :
                new ObjectParameter("IdZona", typeof(int));
    
            var ventasParameter = ventas.HasValue ?
                new ObjectParameter("Ventas", ventas) :
                new ObjectParameter("Ventas", typeof(double));
    
            var latitudParameter = latitud.HasValue ?
                new ObjectParameter("Latitud", latitud) :
                new ObjectParameter("Latitud", typeof(double));
    
            var longitudParameter = longitud.HasValue ?
                new ObjectParameter("Longitud", longitud) :
                new ObjectParameter("Longitud", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CineAdd", nombreParameter, direccionParameter, idZonaParameter, ventasParameter, latitudParameter, longitudParameter);
        }
    
        public virtual int CineDelete(Nullable<int> idCine)
        {
            var idCineParameter = idCine.HasValue ?
                new ObjectParameter("IdCine", idCine) :
                new ObjectParameter("IdCine", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CineDelete", idCineParameter);
        }
    
        public virtual ObjectResult<CineGetAll_Result> CineGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CineGetAll_Result>("CineGetAll");
        }
    
        public virtual ObjectResult<CineGetById_Result> CineGetById(Nullable<int> idCine)
        {
            var idCineParameter = idCine.HasValue ?
                new ObjectParameter("IdCine", idCine) :
                new ObjectParameter("IdCine", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CineGetById_Result>("CineGetById", idCineParameter);
        }
    
        public virtual int CineUpdate(Nullable<int> idCine, string nombre, string direccion, Nullable<int> idZona, Nullable<double> ventas, Nullable<double> latitud, Nullable<double> longitud)
        {
            var idCineParameter = idCine.HasValue ?
                new ObjectParameter("IdCine", idCine) :
                new ObjectParameter("IdCine", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var idZonaParameter = idZona.HasValue ?
                new ObjectParameter("IdZona", idZona) :
                new ObjectParameter("IdZona", typeof(int));
    
            var ventasParameter = ventas.HasValue ?
                new ObjectParameter("Ventas", ventas) :
                new ObjectParameter("Ventas", typeof(double));
    
            var latitudParameter = latitud.HasValue ?
                new ObjectParameter("Latitud", latitud) :
                new ObjectParameter("Latitud", typeof(double));
    
            var longitudParameter = longitud.HasValue ?
                new ObjectParameter("Longitud", longitud) :
                new ObjectParameter("Longitud", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CineUpdate", idCineParameter, nombreParameter, direccionParameter, idZonaParameter, ventasParameter, latitudParameter, longitudParameter);
        }
    
        public virtual ObjectResult<GetByUserName_Result> GetByUserName(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetByUserName_Result>("GetByUserName", emailParameter);
        }
    
        public virtual int PasswordUpdate(string email, byte[] password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PasswordUpdate", emailParameter, passwordParameter);
        }
    
        public virtual int UsuarioAdd(string nombre, string apellidoPaterno, string apellidoMaterno, string userName, string email, byte[] password)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UsuarioAdd", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, userNameParameter, emailParameter, passwordParameter);
        }
    
        public virtual int ZonaAdd(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ZonaAdd", nombreParameter);
        }
    
        public virtual int ZonaDelete(Nullable<int> idZona)
        {
            var idZonaParameter = idZona.HasValue ?
                new ObjectParameter("IdZona", idZona) :
                new ObjectParameter("IdZona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ZonaDelete", idZonaParameter);
        }
    
        public virtual ObjectResult<ZonaGetAll_Result> ZonaGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZonaGetAll_Result>("ZonaGetAll");
        }
    
        public virtual ObjectResult<ZonaGetById_Result> ZonaGetById(Nullable<int> idZona)
        {
            var idZonaParameter = idZona.HasValue ?
                new ObjectParameter("IdZona", idZona) :
                new ObjectParameter("IdZona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZonaGetById_Result>("ZonaGetById", idZonaParameter);
        }
    
        public virtual int ZonaUpdate(Nullable<int> idZona, string nombre)
        {
            var idZonaParameter = idZona.HasValue ?
                new ObjectParameter("IdZona", idZona) :
                new ObjectParameter("IdZona", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ZonaUpdate", idZonaParameter, nombreParameter);
        }
    }
}
